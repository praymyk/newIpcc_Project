<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ipcc.common.mapper.primary.GuestMapper">

    <!-- ResultMap 정의 -->
    <resultMap id="Guest" type="Guest">
        <id property="guestId" column="GUEST_ID"/>
        <result property="custId" column="CUST_ID"/>
        <result property="agentId" column="AGT_ID"/>
        <result property="name" column="GUEST_NAME"/>
        <result property="birthDay" column="BIRTHDAY"/>
        <result property="gender" column="GENDER"/>
        <result property="grade" column="GUEST_GRADE"/>
        <result property="email" column="EMAIL"/>
        <result property="roadAddress" column="R_ADDRESS"/>
        <result property="detailAddress" column="D_ADDRESS"/>
        <result property="phone" column="PHONE"/>
        <result property="enrollDate" column="ENROLL_DATE"/>
        <result property="unrollDate" column="UNROLL_DATE"/>
        <result property="guestMemo" column="GUEST_MEMO"/>
        <result property="black" column="BLACK"/>
        <result property="state" column="STATE"/>

        <!-- 조인된 결과 매핑 -->
        <result property="guestType" column="GUEST_TYPE"/>
        <result property="guestLastCallDate" column="LAST_CALL_DATE"/>
    </resultMap>

    <resultMap id="CounselLog" type="CounselLog">
        <!-- 기본 필드 매핑 -->
        <id property="counselId" column="COUNSEL_ID"/>
        <result property="custId" column="CUST_ID"/>
        <result property="guestId" column="GUEST_ID"/>
        <result property="agentId" column="AGENT_ID"/>
        <result property="callId" column="CALL_ID"/>
        <result property="counselDate" column="CALL_DATE"/>
        <result property="timeUsed" column="TIME_USED"/>
        <result property="counselInOut" column="DIV_INOUT"/>
        <result property="processStat" column="PROCESS_STAT"/>
        <result property="counselMemo" column="COUNSEL_MEMO"/>
        <result property="callBackDate" column="CALLBACK_DATE"/>
        <result property="callBackTime" column="CALLBACK_TIME"/>
        <result property="callBackMemo" column="CALLBACK_MEMO"/>

        <!-- AGENT_NAME 조인 매핑 -->
        <result property="agentName" column="AGT_NAME"/> <!-- 조인된 AGENT_NAME 값 -->
        <result property="guestName" column="GUEST_NAME"/> <!-- 조인된 GUEST_NAME 값 -->

    </resultMap>

    <!-- 상담원 리스트 숫자 조회 (카운팅용) / State Y -->
    <select id="countGuestList" resultType="int">
        SELECT COUNT(*)
        FROM crm_guest
        WHERE CUST_ID = #{custId}
          AND STATE = 'Y'
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (GUEST_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
            OR PHONE LIKE CONCAT('%', #{searchKeyword}, '%')
            OR BIRTHDAY LIKE CONCAT('%', #{searchKeyword}, '%')
            OR R_ADDRESS LIKE CONCAT('%', #{searchKeyword}, '%')
            OR D_ADDRESS LIKE CONCAT('%', #{searchKeyword}, '%')
            OR EMAIL LIKE CONCAT('%', #{searchKeyword}, '%')
            )
        </if>
    </select>
    <!-- 상담원 리스트 조회 / State Y -->
    <select id="selectGuestList" resultMap="Guest">
        SELECT *
        FROM crm_guest
        WHERE CUST_ID = #{custId}
          AND STATE = 'Y'

        <!-- 검색어가 있을 경우 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (GUEST_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
            OR PHONE LIKE CONCAT('%', #{searchKeyword}, '%')
            OR BIRTHDAY LIKE CONCAT('%', #{searchKeyword}, '%')
            OR R_ADDRESS LIKE CONCAT('%', #{searchKeyword}, '%')
            OR D_ADDRESS LIKE CONCAT('%', #{searchKeyword}, '%')
            OR EMAIL LIKE CONCAT('%', #{searchKeyword}, '%')
            )
        </if>

        <!-- 정렬 기준 적용 -->
        ORDER BY
        <choose>
            <!-- 검색 조건이 없을 경우 AGT_NO 기본 오름차순 정렬 -->
            <when test="orderBy == null or orderBy == ''">
                AGT_NO ASC
            </when>
            <!-- 검색 조건이 있을 경우 선택한 필드로 정렬 -->
            <when test="orderBy == 'guestId'"> GUEST_ID </when>
            <when test="orderBy == 'custId'"> CUST_ID </when>
            <when test="orderBy == 'agentId'"> AGT_ID </when>
            <when test="orderBy == 'name'"> GUEST_NAME </when>
            <when test="orderBy == 'birthDay'"> BIRTHDAY </when>
            <when test="orderBy == 'gender'"> GENDER </when>
            <when test="orderBy == 'grade'"> GUEST_GRADE </when>
            <when test="orderBy == 'email'"> EMAIL </when>
            <when test="orderBy == 'roadAddress'"> R_ADDRESS </when>
            <when test="orderBy == 'detailAddress'"> D_ADDRESS </when>
            <when test="orderBy == 'phone'"> PHONE </when>
            <when test="orderBy == 'enrollDate'"> ENROLL_DATE </when>
            <when test="orderBy == 'unrollDate'"> UNROLL_DATE </when>
            <when test="orderBy == 'guestMemo'"> GUEST_MEMO </when>
            <when test="orderBy == 'black'"> BLACK </when>
            <when test="orderBy == 'state'"> STATE </when>

            <otherwise> GUEST_ID </otherwise>  <!-- 기본적으로 AGT_NO 사용 -->
        </choose>

        <!-- 오름차순 또는 내림차순 적용 -->
        <choose>
            <when test="orderDirection != null and orderDirection == 'ASC'"> ASC </when>
            <otherwise> DESC </otherwise> <!-- 기본값은 내림차순 -->
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 고객 상세 정보 조회 -->
    <select id="selectGuestInfo" resultMap="Guest">
        SELECT *
        FROM crm_guest
        WHERE GUEST_ID = #{guestId}
    </select>

    <!-- 고객 정보 저장 전 전화번호 중복 체크 -->
    <select id="checkPhoneDuplicate" resultType="int">
        SELECT COUNT(*)
        FROM crm_guest
        WHERE PHONE = #{phone}
          AND GUEST_ID != #{guestId}
          AND STATE = 'Y'
    </select>

    <!-- 고객 정보 등록/업데이트 -->
    <insert id="saveGuestInfo" parameterType="Guest">
        INSERT INTO crm_guest (
            <if test="guestId != null">GUEST_ID, ENROLL_DATE,</if>
            CUST_ID, AGT_ID, GUEST_NAME, BIRTHDAY, GENDER,
            GUEST_GRADE, EMAIL, R_ADDRESS, D_ADDRESS, PHONE,
            GUEST_MEMO, BLACK, STATE
        ) VALUES (
            <if test="guestId != null">#{guestId}, #{enrollDate},</if>
            #{custId}, #{agentId}, #{name}, #{birthDay}, #{gender},
            #{grade}, #{email}, #{roadAddress}, #{detailAddress}, #{phone},
            #{guestMemo}, #{black}, #{state}
        )
        ON DUPLICATE KEY UPDATE
            CUST_ID = VALUES(CUST_ID),
            AGT_ID = VALUES(AGT_ID),
            GUEST_NAME = VALUES(GUEST_NAME),
            BIRTHDAY = VALUES(BIRTHDAY),
            GENDER = VALUES(GENDER),
            GUEST_GRADE = VALUES(GUEST_GRADE),
            EMAIL = VALUES(EMAIL),
            R_ADDRESS = VALUES(R_ADDRESS),
            D_ADDRESS = VALUES(D_ADDRESS),
            PHONE = VALUES(PHONE),
            ENROLL_DATE = VALUES(ENROLL_DATE),
            GUEST_MEMO = VALUES(GUEST_MEMO),
            BLACK = VALUES(BLACK),
            STATE = VALUES(STATE);
    </insert>

    <!-- 선택 고객의 상담이력 수 조회(페이징 처리용) -->
    <select id="countCounselLogList" resultType="int">
        SELECT COUNT(*)
        FROM crm_counsel
        WHERE GUEST_ID = #{guestId}
        <if test="processStat != null and processStat != ''">
            AND PROCESS_STAT = #{processStat}
        </if>
        <if test="startDate != null and startDate != ''">
            AND CALL_DATE BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <!-- 선택 고객의 상담이력 리스트 조회 -->
    <select id="getCounselLogList" resultMap="CounselLog">
        SELECT
        cc.COUNSEL_ID,
        cc.CUST_ID,
        MAX(cg.GUEST_NAME) AS GUEST_NAME,  -- GUEST_NAME에 집계 함수 사용
        MAX(ca.AGT_NAME) AS AGT_NAME,      -- AGT_NAME에 집계 함수 사용
        cc.CALL_ID,
        cc.CALL_DATE,
        cc.TIME_USED,
        cc.DIV_INOUT,
        cc.PROCESS_STAT,
        cc.COUNSEL_MEMO,

        -- 각 카테고리 TYPE별로 나눠서 CATEGORY_VALUE를 표시 -> 이부분 추가 수정 해야봐됨
        -- 동적 카테고리 처리
        GROUP_CONCAT(CONCAT(cat.CATEGORY_TYPE, ':', cat.CATEGORY_VALUE) ORDER BY cat.CATEGORY_TYPE SEPARATOR ', ') AS CATEGORIES

        FROM crm_counsel cc

        -- 카테고리 로그와 먼저 조인 (CATEGORY_ID를 가져오기 위해)
        LEFT JOIN crm_category_log ccl ON cc.COUNSEL_ID = ccl.COUNSEL_ID
        -- 카테고리 테이블과 조인 (카테고리 값 가져오기)
        LEFT JOIN crm_category cat ON ccl.CATEGORY_ID = cat.CATEGORY_ID
        -- 고객 정보와 조인 (고객 이름을 가져오기 위해)
        LEFT JOIN crm_guest cg ON cc.GUEST_ID = cg.GUEST_ID
        -- 상담원 정보와 조인 (상담원 이름을 가져오기 위해)
        LEFT JOIN crm_agent ca ON cc.AGENT_ID = ca.AGT_ID

        -- 상담 ID 기준으로 그룹화
        WHERE cc.GUEST_ID= #{filter.guestId}
        <!-- 검색어가 있을 경우 -->
        <if test="filter.searchKeyword != null and filter.searchKeyword != ''">
            AND (GUEST_NAME LIKE CONCAT('%', #{filter.searchKeyword}, '%')
            OR CALL_DATE LIKE CONCAT('%', #{filter.searchKeyword}, '%'))
        </if>
        <!-- 접수 일자 조건이 있을 경우 -->
        <if test="filter.startDate != null and filter.startDate != ''">
            AND cc.CALL_DATE BETWEEN #{filter.startDate} AND #{filter.endDate}
        </if>
        <!-- 상담 결과 조건이 있을 경우 -->
        <if test="filter.processStat != null and filter.processStat != ''">
            AND cc.PROCESS_STAT = #{filter.processStat}
        </if>
        GROUP BY COUNSEL_ID
        <!-- 정렬 기준 적용 -->
        ORDER BY
        <choose>
        <!-- orderBy 값이 없을 때 기본 정렬 -->
        <when test="orderBy == null or orderBy == ''">
            cc.COUNSEL_ID DESC
        </when>

        <!-- orderBy 값이 있을 때 -->
        <when test="orderBy != null and orderBy != ''">
            <choose>
                <!-- 각 필드에 대해 테이블 별칭을 명확하게 지정 -->
                <when test="orderBy == 'guestName'">GUEST_NAME ${orderDirection}</when>
                <when test="orderBy == 'agentName'">AGT_NAME ${orderDirection}</when>
                <when test="orderBy == 'counselDate'">CALL_DATE ${orderDirection}</when>
                <when test="orderBy == 'inPath'">CATEGORIES ${orderDirection}</when>
                <when test="orderBy == 'processStat'">PROCESS_STAT ${orderDirection}</when>
                <!-- 기본 정렬 필드가 없으면 상담 ID로 -->
                <otherwise>COUNSEL_ID DESC</otherwise>
            </choose>
        </when>
            <!-- 기본 정렬을 상담 ID로 설정 -->
            <otherwise>COUNSEL_ID DESC</otherwise>
        </choose>

        LIMIT #{pageSize} OFFSET #{offset}
    </select>



</mapper>